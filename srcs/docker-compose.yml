version: '3'

services:
  nginx:
    build: ./requirements/nginx
    ports:
      - 443:443
    volumes:
      - wp-volume:/var/www/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
    networks:
      - inception
    restart: always
    container_name: nginx
    image: nginx
    depends_on:
      - wordpress

  mariadb:
    build: 
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
    ports:
      - 3306:3306
    restart: always
    container_name: mariadb
    image: mariadb
    volumes:
      - db-volume:/var/lib/mysql/
    networks:
      - inception

  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    restart: always
    container_name: wordpress
    image: wordpress
    depends_on:
      - mariadb
    volumes:
      - wp-volume:/var/www/
    networks:
      - inception

  redis:
    build: ./requirements/bonus/redis
    restart: always
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - inception

  site:
    build: ./requirements/bonus/site
    restart: always
    container_name: site
    image: site
    ports:
      - 80:80

  adminer:
    build: ./requirements/bonus/adminer
    restart: always
    container_name: adminer
    image: adminer
    ports:
      - 2121:2121
    depends_on:
      - mariadb
    networks:
      - inception

volumes:
  wp-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wordpress

  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/mariadb

networks:
  inception:
    driver: bridge